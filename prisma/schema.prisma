generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Actor {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[] @relation("ActorToMovie")

  @@map("actors")
}

model Director {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]

  @@map("directors")
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[] @relation("GenreToMovie")

  @@map("genres")
}

model Movie {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String
  year        Int
  director    String
  poster      String
  directors   Director  @relation(fields: [director], references: [name], map: "movies_fk0")
  tracker     Tracker[]
  watched     Watched[]
  actors      Actor[]   @relation("ActorToMovie")
  genres      Genre[]   @relation("GenreToMovie")

  @@map("movies")
}

model Session {
  id         Int      @id @default(autoincrement())
  user_id    Int
  token      String   @unique
  created_at DateTime @default(now()) @db.Timestamp(6)
  users      User     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "sessions_fk0")

  @@map("sessions")
}

model Tracker {
  id         Int      @id @default(autoincrement())
  user_id    Int
  movie_id   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  users      User     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "tracker_fk0")
  movies     Movie    @relation(fields: [movie_id], references: [id], onDelete: Cascade, map: "tracker_fk1")

  @@map("tracker")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  created_at DateTime  @default(now()) @db.Timestamp(6)
  sessions   Session[]
  tracker    Tracker[]
  watched    Watched[]

  @@map("users")
}

model Watched {
  id         Int      @id @default(autoincrement())
  user_id    Int
  movie_id   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  users      User     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "watched_fk0")
  movies     Movie    @relation(fields: [movie_id], references: [id], onDelete: Cascade, map: "watched_fk1")

  @@map("watched")
}
